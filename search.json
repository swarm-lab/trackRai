[{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://swarm-lab.github.io/trackRai/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://swarm-lab.github.io/trackRai/articles/z1_installyolo.html","id":"package-installation","dir":"Articles","previous_headings":"","what":"1.1 - Package installation","title":"1 - Install YOLO11","text":"trackRai currently available CRAN. However, can install directly GitHub follows:","code":"pak::pak(\"swarm-lab/trackRai\")"},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/articles/z1_installyolo.html","id":"before-installing-yolo","dir":"Articles","previous_headings":"1.2 - YOLO installation","what":"1.2.1 - Before installing YOLO","title":"1 - Install YOLO11","text":"recommended run trackRai machine equipped NVIDIA graphics card CUDA toolkit. computer equipped NVIDIA graphics card, can find instructions install CUDA : Windows computers: https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/ Linux computers: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/ Note computer equipped NVIDIA graphics card CUDA toolkit installed , can still use trackRai training YOLO model may take long time (several hours).","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z1_installyolo.html","id":"installing-yolo","dir":"Articles","previous_headings":"1.2 - YOLO installation","what":"1.2.2 - Installing YOLO","title":"1 - Install YOLO11","text":"trackRai installed, need install YOLO machine using helper function install_yolo() provided trackRai. installer prompt series questions. Answer “Yes” every time want YOLO dependencies installed machine. Answering “” may stop installation process trackRai may usable. Note: default, install_yolo() attempt install Python 3.12.5 system already present. errors happen installation Python, prefer installing another version, can using python_version parameter install_yolo(). YOLO currently compatible Python 3.8.0 3.12.8, versions work.","code":"library(trackRai) install_yolo()"},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"launch-the-preparation-app","dir":"Articles","previous_headings":"","what":"2.1 - Launch the preparation app","title":"2 - Prepare a dataset for training a YOLO model","text":"launch dataset preparation app, run following R console: open app either viewer panel RStudio Positron, default internet browser. can control app opened using launch.browser parameter (see documentation shiny::runApp() information).","code":"library(trackRai) prepare()"},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-1-video-module","dir":"Articles","previous_headings":"","what":"2.2 - Tab 1: video module","title":"2 - Prepare a dataset for training a YOLO model","text":"app opens, presented “Video” tab. Click Select video button navigate video like use preparing YOLO dataset. video selected, appear left panel app.  video slider can use control video stream. slider three handles: green handle allows navigate video display frame choice; two grey handles allow restrict processing video range frames video. can convenient portion video usable, instance. video loaded, second tab app become available can click navigate .","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-2-background-module","dir":"Articles","previous_headings":"","what":"2.3 - Tab 2: background module","title":"2 - Prepare a dataset for training a YOLO model","text":"video loaded memory, first step process load reconstruct background objects moving. already image background without objects , can load using Select existing background button. , can attempt reconstruct clicking Automatically estimate background button.  choose reconstruct background, can select one methods reconstruction using Background type dropwdown menu: “mean” uses average value pixel background “median” uses median value pixel background “min” uses minimum value pixel background “max” uses maximum value pixel background statistics computed using several equally-spaced frames video. can choose number frames used process Number frames estimating background slider. frames tend yield better result expense longer computation time. objects still present reconstructed background image (instance, move recording), can attempt remove clicking Select ghost removal button. activated ghost removal mode, can draw polygon around object remove (just click around object create corners polygon). done drawing polygon, hit return key keyboard app try replace object best estimate local background. Finally, can save background picture later use clicking Save background file button. background image created/loaded, third tab app become available can click navigate . Note: ghost removal mode basic may yield good results complex backgrounds. Another option save background file ghosts use advanced image editing software remove (instance, Photoshop’s Remove tool can give much better results).","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-3-mask-module","dir":"Articles","previous_headings":"","what":"2.4 - Tab 3: mask module","title":"2 - Prepare a dataset for training a YOLO model","text":"second step process load create optional mask. mask can help restrict area app look objects , therefore, make final results accurate. default, whole image taken account analyis. already mask image, can load using Select existing  mask button. , can create one follows. First, click Exclude button exclude entirety image analysis. , click either Add polygon ROI Add ellipse ROI buttons, making sure Including tick box selected. clicked Add polygon ROI button, able draw polygon encloses region image like include analysis (just click image create corners polygon). done drawing polygon, hit return key keyboard set region interest. clicked Add ellipse ROI button, need select five points define periphery ellipse.   can also define multiple regions interests incrementing ROI id counter creating new region. can create complex masks excluding parts image selectively tick Excluding tick box. Finally, can save mask picture later use clicking Save mask file button. mask image created/loaded, fourth tab app become available can click navigate .","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-4-segmentation-module","dir":"Articles","previous_headings":"","what":"2.5 - Tab 4: segmentation module","title":"2 - Prepare a dataset for training a YOLO model","text":"third step process determine threshold differentiate objects background. tab, seeing difference given frame video background image loaded/created earlier. default, app considers objects detect appear darker background video frames. case, can tick Ligther tick box objects appear lighter background video frames, bit tick box objects parts darker background others lighter.  can manually select difference threshold using slider bottom tab, let app decide clicking Autothreshold button selecting one automatic threshold detection methods provided dropdown menu right button. threshold set, fifth tab app become available can click navigate .","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-5-identification-module","dir":"Articles","previous_headings":"","what":"2.6 - Tab 5: identification module","title":"2 - Prepare a dataset for training a YOLO model","text":"fourth step process isolate single instances objects video frames. First, need set buffer around detected objects. buffer large enough object completely enclosed corresponding rectangle. worry several objects enclosed rectangle; matters enough single instances clearly separated others. can navigate video check whether selected buffer size works well multiple frames.  buffer size set, click Compute object stats button app compute widths heights detected objects across given number equally spaced frames video. can choose number frames used ; frames provide better statistics expense longer computation time. statistics computed, distribution plotted sidebar.  default, app attempt determine best statistics corresponds single instances objects. single instances detected way appear green rectangles video frame, others appear red/orange rectangles. can navigate video check whether selected statistic ranges work across whole video. particular, make sure selected instance contains one object. happens, can untick Automatic object selection tick box manually change ranges eliminate instances. statistics set, last tab app become available can click navigate . Note: modify buffer size computing object statistics, need compute object statistics take account new buffer size.","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z2_prepare.html","id":"tab-6-composite-module","dir":"Articles","previous_headings":"","what":"2.7 - Tab 6: composite module","title":"2 - Prepare a dataset for training a YOLO model","text":"final step process generate training dataset . create composite images set number objects printed background image, random locations orientations within boundary mask loaded/created earlier. also create bounding boxes objects YOLO needs learn objects look like. First, set number objects included composite images. number objects high enough result lot random arrangements overlaps YOLO can generalize better situations objects touch overlap real video frames. can also set buffer zone ensure printed objects overlap much mask boundaries. Next, can add random noise composite images order increase generalizability YOLO training. can also add random gain bias change contrast luminosity composite images ever generalizability. check effect parameter resulting composite images, can click Generate test composite button generate one sample composite images. satisfied results, can set number images used training, validating, testing YOLO model train separate app. recommend breakdown reserve 70% images training, 15% validating testing, respectively. can generate training dataset clicking Generate YOLO dataset button. bring file manager can select location like dataset saved (folder named YOLO created location). process terminates, done can close app. next step training YOLO model.  Note: generating training dataset, can also ask app create reframed video ticking tick box bottom sidebar. prepare video file everything outside mask removed dimensions image set optimize video processing done YOLO tracking phase. completely optional add processing time, performing tracking reframed video can twice fast original video, depending number objects track.","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z3_train.html","id":"launch-the-training-app","dir":"Articles","previous_headings":"","what":"3.1 - Launch the training app","title":"3 - Train a YOLO model","text":"launch training app, run following R console: open app either viewer panel RStudio Positron, default internet browser. can control app opened using launch.browser parameter (see documentation shiny::runApp() information).","code":"library(trackRai) train()"},{"path":"https://swarm-lab.github.io/trackRai/articles/z3_train.html","id":"tab-1-training-module","dir":"Articles","previous_headings":"","what":"3.2 - Tab 1: training module","title":"3 - Train a YOLO model","text":"app opens, presented “Training” tab. Click Select training dataset button navigate folder containing YOLO dataset (folder named YOLO). Select folder. , select model size. Smaller models take less time memory train, larger models may yield better results complex arrangements objects. find smaller (“nano”) model size really good job situations. Finally, can set maximum number training epochs like run “patience” training process. last paramater allows training stop automatically training performance improve set number epochs. helps prevent overfitting stopping training performance plateaus; also saves computing time. want training stop early, set patience maximum number epochs.  setting training parameters, click Start training button wait completes. Performance metrics displayed graph left window, log panel graph. training completed successfully, second tab app become available can click navigate .","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z3_train.html","id":"tab-2-checking-module","dir":"Articles","previous_headings":"","what":"3.3 - Tab 2: checking module","title":"3 - Train a YOLO model","text":"second tab training app, can check quality training effect inference paramaters detection objects interest video. First, need select video clicking Select video button. can also select optional mask clicking Select mask (optional) button. load video app can navigate using slider display panel. Detected objects automatically enclosed green rectangle.  can check effect following paramters quality object detection: Minimum confidence threshold: minimum confidence threshold detections. Objects detected confidence threshold disregarded. Adjusting value can help reduce false positives. Intersection union threshold: threshold non-maximum suppression. Lower values result fewer detections eliminating overlapping boxes, can useful reducing duplicates. Maximum number objects detect: Maximum number detections allowed per frame. Limits total number objects model can detect single inference, preventing excessive outputs dense scenes. satisfied detection results, can return first tab increase number training epochs patience training, select larger model size, running another round training. satisfied results, done can close app. next step using trained model track objects video.","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z4_track.html","id":"launch-the-tracking-app","dir":"Articles","previous_headings":"","what":"4.1 - Launch the tracking app","title":"4 - Track objects in a video using a trained YOLO model","text":"launch tracking app, run following R console: open app either viewer panel RStudio Positron, default internet browser. can control app opened using launch.browser parameter (see documentation shiny::runApp() information).","code":"library(trackRai) track()"},{"path":"https://swarm-lab.github.io/trackRai/articles/z4_track.html","id":"tab-1-data-module","dir":"Articles","previous_headings":"","what":"4.2 - Tab 1: data module","title":"4 - Track objects in a video using a trained YOLO model","text":"app opens, presented “Data” tab. First, need select video clicking Select video button. can also select optional mask clicking Select mask (optional) button. load video app can navigate using slider display panel. slider three handles: green handle allows navigate video display frame choice; two grey handles allow restrict processing video range frames video. can convenient portion video usable, instance. Finally, need select trained YOLO dataset clicking Select trained dataset button navigate folder containing trained YOLO dataset (folder named YOLO). Select folder. folder contains multiple trained models, can select one choice using dropdown menu bottom sidebar.  video trained dataset loaded app, second tab app become available can click navigate .","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z4_track.html","id":"tab-2-tracking-module","dir":"Articles","previous_headings":"","what":"4.3 - Tab 2: tracking module","title":"4 - Track objects in a video using a trained YOLO model","text":"second tab tracking app, can set parameters object detection tracking. detection parameters used YOLO decide parts image contains object interest. parameters : Maximum number objects detect: Maximum number detections allowed per frame. Limits total number objects model can detect single inference, preventing excessive outputs dense scenes. Minimum confidence threshold: minimum confidence threshold detections. Objects detected confidence threshold disregarded. Adjusting value can help reduce false positives. Intersection union threshold: threshold non-maximum suppression. Lower values result fewer detections eliminating overlapping boxes, can useful reducing duplicates. effect parameters detection quality can seen directly display panel.  tracking parameters used YOLO decide object given frame corresponds object following frame. parameters : Association thresholds: highest value threshold used initial association detection track. detection’s score threshold, associated first round. lowest value threshold used secondary association. detection wasn’t associated first round score higher , might still associated second round. New track threshold: threshold used starting new track. detection doesn’t match existing tracks score threshold, new track initialized. Old track buffer: number frames allowed pass without receiving updates track removed. Higher values allow tracks remain active longer without updates, might help intermittent detections increase risk tracking errors. Track matching threshold: threshold used matching tracks consecutive frames. tracks score threshold considered matching. directly observe effect parameters display panel. However, can run tracking small portion video use Show preview mode evaluate quality resulting tracks. satisfied selected parameters, can start tracking clicking Start tracking button. open file browser can select save results tracking. like see preview tracks tracking running, tick Show preview tick box.  tracking completed, can visualize results using visualization app.","code":""},{"path":"https://swarm-lab.github.io/trackRai/articles/z5_visualize.html","id":"launch-the-visualization-app","dir":"Articles","previous_headings":"","what":"5.1 - Launch the visualization app","title":"5 - Visualize the results of tracking","text":"","code":"library(trackRai) visualize()"},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Garnier. Author, maintainer.","code":""},{"path":"https://swarm-lab.github.io/trackRai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garnier S (2025). trackRai: Multi-Object Tracking YOLO11. R package version 0.0.0.9000, https://swarm-lab.github.io/trackRai/, https://github.com/swarm-lab/trackRai.","code":"@Manual{,   title = {trackRai: Multi-Object Tracking With YOLO11},   author = {Simon Garnier},   year = {2025},   note = {R package version 0.0.0.9000, https://swarm-lab.github.io/trackRai/},   url = {https://github.com/swarm-lab/trackRai}, }"},{"path":"https://swarm-lab.github.io/trackRai/index.html","id":"trackrai-","dir":"","previous_headings":"","what":"Multi-Object Tracking With YOLO11","title":"Multi-Object Tracking With YOLO11","text":"trackRai YOLO-based multi-object tracking software R. provides series Shiny apps automating preparation training YOLO11 models, performing tracking multiple objects video, visualizing results tracking process.","code":""},{"path":"https://swarm-lab.github.io/trackRai/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multi-Object Tracking With YOLO11","text":"can install development version trackRai GitHub :","code":"# install.packages(\"pak\") pak::pak(\"swarm-lab/trackRai\")"},{"path":"https://swarm-lab.github.io/trackRai/index.html","id":"user-guides","dir":"","previous_headings":"","what":"User guides","title":"Multi-Object Tracking With YOLO11","text":"1 - Install YOLO11 2 - Prepare dataset training YOLO model 3 - Train YOLO model 4 - Track objects video using trained YOLO model 5 - Visualize results tracking","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/backgrounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the Background of a Video — backgrounder","title":"Reconstruct the Background of a Video — backgrounder","text":"function attempts reconstruct background video filmed fixed point view.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/backgrounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the Background of a Video — backgrounder","text":"","code":"backgrounder(   video,   n = 10,   method = \"median\",   prob = 0.025,   start = NULL,   end = NULL )"},{"path":"https://swarm-lab.github.io/trackRai/reference/backgrounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the Background of a Video — backgrounder","text":"video Python/OpenCV VideoCapture object. n number images video used reconstruct background. method name method reconstruct background. currently 4 methods available: \"mean\" (uses average value pixel background), \"median\" (uses median value pixel background), \"min\" (uses minimum value pixel background), \"max\" (uses maximum value pixel background), \"quant\" (uses arbitrary quantile value pixel background). prob method = \"quant\", quantile value use. start, end start end frames video use background reconstruction. set, first last frames used.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/backgrounder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the Background of a Video — backgrounder","text":"Python/Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/backgrounder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reconstruct the Background of a Video — backgrounder","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":null,"dir":"Reference","previous_headings":"","what":"Install and Update YOLO — install_yolo","title":"Install and Update YOLO — install_yolo","text":"function automates installation/updating YOLO Python dependencies dedicated Python virtual environment use trackRai apps.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install and Update YOLO — install_yolo","text":"","code":"install_yolo(python_version = \"3.12.5\")"},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install and Update YOLO — install_yolo","text":"python_version character string indicating version Python like YOLO run (default: \"3.12.5\"). YOLO currently compatible Python 3.8.0 3.12.8. versions Python necessarily work system, chosen default works systems tested far.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install and Update YOLO — install_yolo","text":"installation/update completes successfully, data frame indicating location YOLO installation version number.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Install and Update YOLO — install_yolo","text":"requested version Python activated system, function attempt install first creating dedicated Python virtual environment.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/reference/install_yolo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Install and Update YOLO — install_yolo","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Numpy Array — is_image","title":"Test for a Numpy Array — is_image","text":"function tests whether object Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Numpy Array — is_image","text":"","code":"is_image(x)"},{"path":"https://swarm-lab.github.io/trackRai/reference/is_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Numpy Array — is_image","text":"x R object.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Numpy Array — is_image","text":"logical indicating whether object Numpy array (TRUE) (FALSE).","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Numpy Array — is_image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_video_capture.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Python VideoCapture Object — is_video_capture","title":"Test for a Python VideoCapture Object — is_video_capture","text":"function tests whether object Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_video_capture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Python VideoCapture Object — is_video_capture","text":"","code":"is_video_capture(x)"},{"path":"https://swarm-lab.github.io/trackRai/reference/is_video_capture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Python VideoCapture Object — is_video_capture","text":"x R object.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_video_capture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Python VideoCapture Object — is_video_capture","text":"logical indicating whether object Python VideoCapture object (TRUE) (FALSE).","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/is_video_capture.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Python VideoCapture Object — is_video_capture","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_col.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Columns in a Numpy Array — n_col","title":"The Number of Columns in a Numpy Array — n_col","text":"function returns number columns present Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Columns in a Numpy Array — n_col","text":"","code":"n_col(x)"},{"path":"https://swarm-lab.github.io/trackRai/reference/n_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Columns in a Numpy Array — n_col","text":"x Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Columns in a Numpy Array — n_col","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_col.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Columns in a Numpy Array — n_col","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Frames in a Python VideoCapture Object — n_frames","title":"The Number of Frames in a Python VideoCapture Object — n_frames","text":"function returns number frames present Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Frames in a Python VideoCapture Object — n_frames","text":"","code":"n_frames(x)"},{"path":"https://swarm-lab.github.io/trackRai/reference/n_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Frames in a Python VideoCapture Object — n_frames","text":"x Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Frames in a Python VideoCapture Object — n_frames","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_frames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Frames in a Python VideoCapture Object — n_frames","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_row.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows in a Numpy Array — n_row","title":"The Number of Rows in a Numpy Array — n_row","text":"function returns number rows present Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows in a Numpy Array — n_row","text":"","code":"n_row(x)"},{"path":"https://swarm-lab.github.io/trackRai/reference/n_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows in a Numpy Array — n_row","text":"x Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows in a Numpy Array — n_row","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/n_row.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows in a Numpy Array — n_row","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Ellipse — optim_ellipse","title":"Fit an Ellipse — optim_ellipse","text":"Given set x/y positions, function attempts find best fitting ellipse goes points.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Ellipse — optim_ellipse","text":"","code":"optim_ellipse(x, y)"},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Ellipse — optim_ellipse","text":"x, y Vectors x x positions.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Ellipse — optim_ellipse","text":"vector 5 elements: x y coordinated center ellipse, width height ellipse, angle ellipse relative y axis degrees.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Ellipse — optim_ellipse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/optim_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Ellipse — optim_ellipse","text":"","code":"optim_ellipse(rnorm(5), rnorm(5)) #> [1]  -1.403510  -1.821818   3.278230   6.226140 -15.756644"},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset Preparation — prepare","title":"Dataset Preparation — prepare","text":"function launches Shiny app help preparation training dataset YOLO.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset Preparation — prepare","text":"","code":"prepare(...)"},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset Preparation — prepare","text":"... Parameters passed runApp.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset Preparation — prepare","text":"function return anything.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dataset Preparation — prepare","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset Preparation — prepare","text":"","code":"if (FALSE) { # \\dontrun{ prepare() } # }"},{"path":"https://swarm-lab.github.io/trackRai/reference/read_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Specific Frame in a Python VideoCapture Object — read_frame","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"function reads specific frame Python VideoCapture object returns Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/read_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"","code":"read_frame(x, i)"},{"path":"https://swarm-lab.github.io/trackRai/reference/read_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"x Python VideoCapture object. 1-indexed frame read.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/read_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/read_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/remove_yolo.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove YOLO — remove_yolo","title":"Remove YOLO — remove_yolo","text":"function automates removal YOLO Python dependencies system.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/remove_yolo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove YOLO — remove_yolo","text":"","code":"remove_yolo()"},{"path":"https://swarm-lab.github.io/trackRai/reference/remove_yolo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove YOLO — remove_yolo","text":"Nothing.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/remove_yolo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove YOLO — remove_yolo","text":"function remove dedicated Python virtual environment system. Python installed execution install_yolo(), removed.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/reference/remove_yolo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove YOLO — remove_yolo","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":null,"dir":"Reference","previous_headings":"","what":"Video Tracking — track","title":"Video Tracking — track","text":"function launches Shiny app help tracking objects video using trained YOLO model.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Video Tracking — track","text":"","code":"track(...)"},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Video Tracking — track","text":"... Parameters passed runApp.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Video Tracking — track","text":"function return anything.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Video Tracking — track","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Video Tracking — track","text":"","code":"if (FALSE) { # \\dontrun{ track() } # }"},{"path":"https://swarm-lab.github.io/trackRai/reference/trackRai-package.html","id":null,"dir":"Reference","previous_headings":"","what":"trackRai: Multi-Object Tracking With YOLO11 — trackRai-package","title":"trackRai: Multi-Object Tracking With YOLO11 — trackRai-package","text":"trackRai YOLO-based multi-object tracking software R. provides series Shiny apps automating preparation training YOLO11 models, performing tracking multiple objects video, visualizing results tracking process.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRai/reference/trackRai-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"trackRai: Multi-Object Tracking With YOLO11 — trackRai-package","text":"Maintainer: Simon Garnier garnier@njit.edu (ORCID)","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Training — train","title":"Model Training — train","text":"function launches Shiny app help training YOLO model.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Training — train","text":"","code":"train(...)"},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Training — train","text":"... Parameters passed runApp.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Training — train","text":"function return anything.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model Training — train","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/train.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Training — train","text":"","code":"if (FALSE) { # \\dontrun{ train() } # }"},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Track Visualization — visualize","title":"Track Visualization — visualize","text":"function launches Shiny app help visualization tracking results obtained track.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track Visualization — visualize","text":"","code":"visualize(...)"},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track Visualization — visualize","text":"... Parameters passed runApp.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track Visualization — visualize","text":"function return anything.","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Track Visualization — visualize","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRai/reference/visualize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Track Visualization — visualize","text":"","code":"if (FALSE) { # \\dontrun{ visualize() } # }"}]
